// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("CONNECTION_STRING")
}

model User {
  id             String         @id @default(uuid())
  firstName      String
  lastName       String
  email          String         @unique
  phone          String?        @unique
  password       String // Hashed password
  profileImage   String? // Path or URL
  totalDocuments Int            @default(0)
  isVerified     Boolean        @default(false)
  isActive       Boolean        @default(true)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  UserDocument   UserDocument[]
}

model DocumentType {
  id            String            @id @default(uuid())
  name          String            @unique
  description   String?
  templatePath  String? // Path to template file
  isActive      Boolean           @default(true)
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  fields        DocumentField[]
  userDocuments UserDocument[]
  category      DocumentCategory? // Using enum
  icon          String? // Icon for UI representation
}

enum DocumentCategory {
  professional
  legal
  personal
  education
  business
  creative
  technical
  medical
}

model DocumentField {
  id             String              @id @default(uuid())
  documentType   DocumentType        @relation(fields: [documentTypeId], references: [id])
  documentTypeId String
  fieldName      String // Internal identifier (snake_case)
  label          String // User-facing label
  fieldType      FieldType // Enum for input types
  isRequired     Boolean             @default(true)
  sortOrder      Int                 @default(0)
  placeholder    String?
  defaultValue   String?
  validation     String? // Regex or validation rules
  options        Json? // For select/radio/checkbox options
  helpText       String? // Helper text for the field
  section        String? // Group fields into sections
  minLength      Int?
  maxLength      Int?
  dependsOn      String? // Field name this field depends on
  dependsValue   String? // Required value to show this field
  fieldData      DocumentFieldData[]

  @@index([documentTypeId, sortOrder])
}

model UserDocument {
  id                String              @id @default(uuid())
  user              User                @relation(fields: [userId], references: [id])
  userId            String
  documentType      DocumentType        @relation(fields: [documentTypeId], references: [id])
  documentTypeId    String
  title             String
  status            DocumentStatus      @default(Draft)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  lastGeneratedAt   DateTime? // When document was last generated
  generatedPdfPath  String? // Path to generated PDF
  generatedDocxPath String? // Path to generated Word doc
  version           Int                 @default(1)
  isCurrent         Boolean             @default(true)
  fieldData         DocumentFieldData[]

  @@index([userId, documentTypeId])
}

model DocumentFieldData {
  id             String        @id @default(uuid())
  userDocument   UserDocument  @relation(fields: [userDocumentId], references: [id])
  userDocumentId String
  field          DocumentField @relation(fields: [fieldId], references: [id])
  fieldId        String
  value          String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  versionNumber  Int           @default(1)

  @@unique([userDocumentId, fieldId, versionNumber])
  @@index([userDocumentId, fieldId])
}

enum FieldType {
  text
  textarea
  number
  date
  email
  phone
  select
  checkbox
  radio
  file
  richText
  signature
}

enum DocumentStatus {
  Draft
  Completed
  Archived
  Published
}
